{"version":3,"sources":["context/actions.js","context/index.js","components/buildings.js","components/rooms.js","components/editorBuilding.js","components/editorRoom.js","components/editor.js","App.js","serviceWorker.js","index.js"],"names":["ROOT","RoomContext","React","createContext","RoomProvider","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","buildings","rooms","addBuilding","bind","assertThisInitialized","addRoom","addUpdateRoom","deleteBuilding","deleteRoom","getRooms","selectBuilding","selectRoom","updateBuilding","_this2","axios","get","concat","then","_ref","data","_","sortBy","toConsumableArray","map","b","name","address","landmarks","id","_landmarks","slicedToArray","landmark1","landmark2","landmark3","setState","buildingId","_this3","_ref2","_this4","find","x","selected","delete","filter","bid","_this5","_this$state","r","_this6","objectSpread","_landmarks2","isNew","_ref3","objectWithoutProperties","bd","_this7","Promise","resolve","put","_ref4","updateBuildingState","catch","e","response","_this8","post","_ref5","rd","_this9","flat_number","room_type","bathrooms_count","area","rent","maintenance_amount","electricity_account_number","_ref6","updateRoomState","children","props","react_default","a","createElement","Provider","value","Component","RoomConsumer","Consumer","BuildingItem","building","onSelect","className","onClick","AddBuilding","onChange","onSubmit","values","target","preventDefault","es_button","type","components_buildings","Fragment","buildings_BuildingItem","key","length","buildings_AddBuilding","RoomItem","room","AddRoom","Rooms","newRoomExists","rooms_RoomItem","rooms_AddRoom","components_rooms","rooms_Rooms","required","undefined","BuildingEditorForm","initialValues","onDelete","react_final_form_es","render","handleSubmit","pristine","validate","input","meta","es_form","Item","label","validateStatus","dirtySinceLastSubmit","submitError","error","touched","help","join","es_input","assign","placeholder","_ref7","htmlType","disabled","RoomEditorForm","es_radio","Group","_ref8","_ref9","Editors","selectedBuilding","selectedRoom","editorBuilding","editorRoom","editor","App","context_RoomProvider","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.083390aa.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst ROOT = '';\nexport function getBuildings() {\n  return axios.get(`${ROOT}/buildings/`);\n}\n\nexport function addBuilding({\n  name, address, landmark1, landmark2, landmark3,\n}) {\n  const data = {\n    name,\n    address,\n    landmarks: [landmark1, landmark2, landmark3].filter(x => x),\n  };\n  return axios.post(`${ROOT}/buildings/`, data);\n}\n\nexport function updateBuilding({\n  name, address, landmark1, landmark2, landmark3, id,\n}) {\n  const data = {\n    name,\n    address,\n    landmarks: [landmark1, landmark2, landmark3].filter(x => x),\n  };\n  return axios.put(`${ROOT}/buildings/${id}/`, data);\n}\nexport function deleteBuilding(id) {\n  return axios.delete(`${ROOT}/buildings/${id}/`);\n}\n\nexport function getRooms(buildingId) {\n  return axios.get(`${ROOT}/buildings/${buildingId}/rooms/`);\n}\n\nexport function addRoom({\n  flat_number,\n  room_type,\n  bathrooms_count,\n  area,\n  rent,\n  maintenance_amount,\n  electricity_account_number,\n  buildingId,\n  id,\n}) {\n  const data = {\n    flat_number,\n    room_type,\n    bathrooms_count,\n    area,\n    rent,\n    maintenance_amount,\n    electricity_account_number,\n  };\n  if (id) {\n    return axios.put(`${ROOT}/buildings/${buildingId}/rooms/${id}/`, data);\n  }\n  return axios.post(`${ROOT}/buildings/${buildingId}/rooms/`, data);\n}\n\nexport function deleteRoom(bid, id) {\n  return axios.delete(`${ROOT}/buildings/${bid}/rooms/${id}/`);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport {\n  getBuildings, deleteBuilding, addBuilding, updateBuilding,\n  getRooms, addRoom, deleteRoom,\n} from './actions';\n\nconst RoomContext = React.createContext();\n\nclass RoomProvider extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      buildings: [],\n      rooms: [],\n    };\n    this.addBuilding = this.addBuilding.bind(this);\n    this.addRoom = this.addRoom.bind(this);\n    this.addUpdateRoom = this.addUpdateRoom.bind(this);\n    this.deleteBuilding = this.deleteBuilding.bind(this);\n    this.deleteRoom = this.deleteRoom.bind(this);\n    this.getRooms = this.getRooms.bind(this);\n    this.selectBuilding = this.selectBuilding.bind(this);\n    this.selectRoom = this.selectRoom.bind(this);\n    this.updateBuilding = this.updateBuilding.bind(this);\n  }\n\n  componentDidMount() {\n    getBuildings().then(({ data }) => {\n      const buildings = _.sortBy([...data.map((b) => {\n        const {\n          name, address, landmarks, id,\n        } = b;\n        const [landmark1, landmark2, landmark3] = landmarks;\n        return {\n          name, address, landmark1, landmark2, landmark3, id,\n        };\n      })], 'id');\n      this.setState({\n        buildings,\n      });\n    });\n  }\n\n  getRooms(id) {\n    this.setState({\n      rooms: [],\n    });\n    getRooms(id).then(({ data }) => this.setState({\n      rooms: data,\n    }));\n  }\n\n  deleteBuilding() {\n    const { buildings } = this.state;\n    const b = buildings.find(x => x.selected);\n    return deleteBuilding(b.id).then(() => {\n      this.setState(state => ({ buildings: state.buildings.filter(x => x.id !== b.id) }));\n    });\n  }\n\n  deleteRoom() {\n    const { buildings, rooms } = this.state;\n    const b = buildings.find(x => x.selected);\n    const r = rooms.find(x => x.selected);\n    return deleteRoom(b.id, r.id).then(() => {\n      this.setState(state => ({ rooms: state.rooms.filter(x => x.id !== r.id) }));\n    });\n  }\n\n  selectBuilding(id) {\n    this.setState(state => ({\n      buildings: state.buildings.map(b => ({\n        ...b,\n        selected: b.id === id,\n      })),\n    }), () => {\n      this.getRooms(id);\n    });\n  }\n\n  selectRoom(id) {\n    this.setState(state => ({\n      rooms: state.rooms.map(b => ({\n        ...b,\n        selected: b.id === id,\n      })),\n    }));\n  }\n\n  updateBuildingState(b) {\n    const {\n      name, address, landmarks, id, selected,\n    } = b;\n    const [landmark1, landmark2, landmark3] = landmarks;\n    const data = {\n      name, address, landmark1, landmark2, landmark3, id, selected,\n    };\n    this.setState(state => ({ buildings: _.sortBy([...state.buildings.map(x => (x.id === data.id ? data : x))], 'id') }));\n  }\n\n  updateRoomState({ isNew, ...data }) {\n    if (!isNew) {\n      this.setState(state => ({ rooms: _.sortBy([...state.rooms.map(x => (x.id === data.id ? data : x))], 'id') }));\n    } else {\n      this.setState(state => ({ rooms: _.sortBy([...state.rooms.filter(x => x.id), data], 'id') }));\n    }\n  }\n\n  updateBuilding(bd) {\n    return new Promise((resolve) => {\n      updateBuilding(bd).then(({ data }) => {\n        this.updateBuildingState({ ...data, selected: true });\n        resolve();\n      }).catch((e) => {\n        resolve(e.response.data);\n      });\n    });\n  }\n\n\n  addBuilding(bd) {\n    return addBuilding(bd).then(({ data }) => {\n      this.setState(state => ({ buildings: [...state.buildings, data] }));\n    });\n  }\n\n  addRoom(rd) {\n    this.setState(state => ({ rooms: [...state.rooms, { ...rd }] }));\n  }\n\n  addUpdateRoom(bd) {\n    const { buildings } = this.state;\n    const b = buildings.find(x => x.selected);\n    return new Promise((resolve) => {\n      addRoom({ ...bd, buildingId: b.id }).then(({ data }) => {\n        this.updateRoomState({ ...data, selected: true, isNew: !bd.id });\n        resolve();\n      }).catch((e) => {\n        resolve(e.response.data);\n      });\n    });\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      <RoomContext.Provider\n        value={{\n          ...this.state,\n          addBuilding: this.addBuilding,\n          addRoom: this.addRoom,\n          addUpdateRoom: this.addUpdateRoom,\n          deleteBuilding: this.deleteBuilding,\n          deleteRoom: this.deleteRoom,\n          selectBuilding: this.selectBuilding,\n          selectRoom: this.selectRoom,\n          updateBuilding: this.updateBuilding,\n        }}\n      >\n        {children}\n      </RoomContext.Provider>\n    );\n  }\n}\nconst RoomConsumer = RoomContext.Consumer;\n\nexport { RoomProvider, RoomConsumer };\n\nRoomProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\nimport { Button } from 'antd';\nimport { RoomConsumer } from '../context';\n\nconst BuildingItem = ({ building, onSelect }) => (\n  <div className={`buildingItem ${building.selected ? 'selected' : ''}`} onClick={() => onSelect(building.id)}>\n    <span className=\"bHeader\">\n      {building.name}\n    </span>\n    <span>\n      {`id: ${building.id}`}\n    </span>\n  </div>\n);\n\nclass AddBuilding extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    const values = this.state;\n    values[e.target.name] = e.target.value;\n    this.setState(values);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const { onSubmit } = this.props;\n    const defBuilding = {\n      name: 'No Name',\n      address: 'No Address',\n    };\n    onSubmit(defBuilding);\n  }\n\n  render() {\n    return (\n      <div className=\"addBuildingFrm\">\n        <Button onClick={this.onSubmit} type=\"primary\">Add New Building</Button>\n      </div>\n    );\n  }\n}\n\n\nexport default () => (\n  <RoomConsumer>\n    {data => (\n      <React.Fragment>\n        <div className=\"buildings\">\n          <h3>Buildings</h3>\n          <div className=\"buildings-group\">\n            {data.buildings.map(x => (\n              <BuildingItem key={x.id} building={x} onSelect={data.selectBuilding} />))}\n          </div>\n          {!data.buildings.length && <span className=\"empty\">Start by adding a Building</span>}\n          <AddBuilding onSubmit={data.addBuilding} />\n        </div>\n      </React.Fragment>\n    )}\n  </RoomConsumer>\n\n);\n\n\nBuildingItem.propTypes = {\n  building: PropTypes.object.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nAddBuilding.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'antd/dist/antd.css';\nimport './styles.css';\nimport { Button } from 'antd';\nimport { RoomConsumer } from '../context';\n\nconst RoomItem = ({ room, onSelect }) => (\n  <div className={`buildingItem ${room.selected ? 'selected' : ''}`} onClick={() => onSelect(room.id)}>\n    <span className={`bHeader ${!room.flat_number ? 'faded' : ''}`}>\n      {room.flat_number || 'New Room'}\n    </span>\n    <span>\n      {`Type: ${room.room_type || ''}`}\n    </span>\n  </div>\n);\n\nclass AddRoom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    const values = this.state;\n    values[e.target.name] = e.target.value;\n    this.setState(values);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const { onSubmit } = this.props;\n    const defRoom = {\n      flat_number: null,\n      room_type: null,\n      bathrooms_count: null,\n      area: null,\n      rent: null,\n      maintenance_amount: null,\n      electricity_account_number: null,\n    };\n    onSubmit(defRoom);\n  }\n\n  render() {\n    return (\n      <div className=\"addRoomFrm\">\n        <Button onClick={this.onSubmit} type=\"primary\">Add New Room</Button>\n      </div>\n    );\n  }\n}\n\nconst Rooms = ({\n  buildings, rooms, selectRoom, addRoom,\n}) => {\n  const building = buildings.find(x => x.selected);\n  const newRoomExists = rooms.find(x => !x.id);\n  return (\n    (building\n      && (\n        <React.Fragment>\n          <div className=\"buildings-group\">\n            {rooms.map(x => (\n              <RoomItem key={x.id} room={x} onSelect={selectRoom} />))}\n          </div>\n          {!rooms.length && <span className=\"empty\">No Rooms in this Building</span>}\n          {!newRoomExists && <AddRoom onSubmit={addRoom} />}\n        </React.Fragment>\n      )) || <span className=\"empty\">No Building Selected</span>\n  );\n};\n\nexport default () => (\n  <RoomConsumer>\n    {data => (\n      <div className=\"rooms\">\n        <h3>Rooms</h3>\n        <Rooms {...data} />\n      </div>\n\n    )}\n  </RoomConsumer>\n\n);\n\n\nRoomItem.propTypes = {\n  room: PropTypes.object.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nAddRoom.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Field } from 'react-final-form';\nimport './styles.css';\nimport { Form as AForm, Input, Button } from 'antd';\n\nconst required = value => (value ? undefined : 'Required');\n\nconst BuildingEditorForm = ({ initialValues, onSubmit, onDelete }) => (\n  <Form\n    initialValues={initialValues}\n    onSubmit={onSubmit}\n    render={({\n      handleSubmit, pristine, values,\n    }) => (\n      <form onSubmit={handleSubmit}>\n        <h2>Building</h2>\n\n        <Field name=\"name\" validate={required}>\n          {({ input, meta }) => (\n            <AForm.Item\n              label=\"Name\"\n              validateStatus={(!meta.dirtySinceLastSubmit && meta.submitError && meta.submitError.length) || (meta.error && meta.touched) ? 'error' : ''}\n              help={(meta.submitError && meta.submitError.length && meta.submitError.join(',')) || (meta.error && meta.touched && meta.error)}\n            >\n              <Input {...input} placeholder=\"Name\" />\n            </AForm.Item>\n          )}\n        </Field>\n        <Field name=\"address\" validate={required}>\n          {({ input, meta }) => (\n            <AForm.Item\n              label=\"Address\"\n              validateStatus={(!meta.dirtySinceLastSubmit && meta.submitError && meta.submitError.length) || (meta.error && meta.touched) ? 'error' : ''}\n              help={(meta.submitError && meta.submitError.length && meta.submitError.join(',')) || (meta.error && meta.touched && meta.error)}\n            >\n              <Input {...input} placeholder=\"Address\" />\n            </AForm.Item>\n          )}\n        </Field>\n        <Field name=\"landmark1\">\n          {({ input, meta }) => (\n            <AForm.Item\n              label=\"Landmark 1\"\n              validateStatus={(!meta.dirtySinceLastSubmit && meta.submitError && meta.submitError.length) || (meta.error && meta.touched) ? 'error' : ''}\n              help={(meta.submitError && meta.submitError.length && meta.submitError.join(',')) || (meta.error && meta.touched && meta.error)}\n            >\n              <Input {...input} placeholder=\"Landmark\" />\n            </AForm.Item>\n          )}\n        </Field>\n        <Field name=\"landmark2\">\n          {({ input, meta }) => (\n            <AForm.Item\n              label=\"Landmark 2\"\n              validateStatus={(!meta.dirtySinceLastSubmit && meta.submitError && meta.submitError.length) || (meta.error && meta.touched) ? 'error' : ''}\n              help={(meta.submitError && meta.submitError.length && meta.submitError.join(',')) || (meta.error && meta.touched && meta.error)}\n            >\n              <Input {...input} placeholder=\"Landmark\" />\n            </AForm.Item>\n          )}\n        </Field>\n        <Field name=\"landmark3\">\n          {({ input, meta }) => (\n            <AForm.Item\n              label=\"Landmark 3\"\n              validateStatus={(!meta.dirtySinceLastSubmit && meta.submitError && meta.submitError.length) || (meta.error && meta.touched) ? 'error' : ''}\n              help={(meta.submitError && meta.submitError.length && meta.submitError.join(',')) || (meta.error && meta.touched && meta.error)}\n            >\n              <Input {...input} placeholder=\"Landmark\" />\n            </AForm.Item>\n          )}\n        </Field>\n        <Button type=\"primary\" htmlType=\"submit\" disabled={pristine}>Save</Button>\n        <Button type=\"danger\" onClick={onDelete} disabled={!values || !values.id}>Delete</Button>\n      </form>\n    )}\n  />\n);\n\nBuildingEditorForm.propTypes = {\n  initialValues: PropTypes.object.isRequired,\n  values: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\nexport default BuildingEditorForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Field } from 'react-final-form';\nimport './styles.css';\nimport {\n  Form as AForm, Input, Button, Radio,\n} from 'antd';\n\nconst RoomEditorForm = ({ initialValues, onSubmit, onDelete }) => (\n  <Form\n    initialValues={initialValues}\n    onSubmit={onSubmit}\n    render={({\n      handleSubmit, pristine, values,\n    }) => (\n      <form onSubmit={handleSubmit}>\n        <h2>Room</h2>\n\n        <Field name=\"flat_number\">\n          {({ input, meta }) => (\n            <AForm.Item\n              label=\"Flat Number\"\n              validateStatus={(!meta.dirtySinceLastSubmit && meta.submitError && meta.submitError.length) || (meta.error && meta.touched) ? 'error' : ''}\n              help={(meta.submitError && meta.submitError.length && meta.submitError.join(',')) || (meta.error && meta.touched && meta.error)}\n            >\n\n              <Input {...input} placeholder=\"Flat Number\" />\n            </AForm.Item>\n          )}\n        </Field>\n        <Field name=\"room_type\">\n          {({ input, meta }) => (\n            <AForm.Item\n              label=\"Room Type\"\n              validateStatus={(!meta.dirtySinceLastSubmit && meta.submitError && meta.submitError.length) || (meta.error && meta.touched) ? 'error' : ''}\n              help={(meta.submitError && meta.submitError.length && meta.submitError.join(',')) || (meta.error && meta.touched && meta.error)}\n            >\n              <Radio.Group {...input}>\n                <Radio value=\"1 BHK\">1 BHK</Radio>\n                <Radio value=\"2 BHK\">2 BHK</Radio>\n                <Radio value=\"3 BHK\">3 BHK</Radio>\n                <Radio value=\"Studio\">Studio</Radio>\n              </Radio.Group>\n            </AForm.Item>\n          )}\n        </Field>\n        <Field name=\"bathrooms_count\">\n          {({ input, meta }) => (\n            <AForm.Item\n              label=\"Bathrooms\"\n              validateStatus={(!meta.dirtySinceLastSubmit && meta.submitError && meta.submitError.length) || (meta.error && meta.touched) ? 'error' : ''}\n              help={(meta.submitError && meta.submitError.length && meta.submitError.join(',')) || (meta.error && meta.touched && meta.error)}\n            >\n              <Input {...input} placeholder=\"Bathrooms\" />\n            </AForm.Item>\n          )}\n        </Field>\n        <Field name=\"area\">\n          {({ input, meta }) => (\n            <AForm.Item\n              label=\"Area\"\n              validateStatus={(!meta.dirtySinceLastSubmit && meta.submitError && meta.submitError.length) || (meta.error && meta.touched) ? 'error' : ''}\n              help={(meta.submitError && meta.submitError.length && meta.submitError.join(',')) || (meta.error && meta.touched && meta.error)}\n            >\n              <Input {...input} placeholder=\"Area\" />\n            </AForm.Item>\n          )}\n        </Field>\n        <Field name=\"rent\">\n          {({ input, meta }) => (\n            <AForm.Item\n              label=\"Rent\"\n              validateStatus={(!meta.dirtySinceLastSubmit && meta.submitError && meta.submitError.length) || (meta.error && meta.touched) ? 'error' : ''}\n              help={(meta.submitError && meta.submitError.length && meta.submitError.join(',')) || (meta.error && meta.touched && meta.error)}\n            >\n              <Input {...input} placeholder=\"Rent\" />\n            </AForm.Item>\n          )}\n        </Field>\n        <Field name=\"maintenance_amount\">\n          {({ input, meta }) => (\n            <AForm.Item\n              label=\"Maintenance Amount\"\n              validateStatus={(!meta.dirtySinceLastSubmit && meta.submitError && meta.submitError.length) || (meta.error && meta.touched) ? 'error' : ''}\n              help={(meta.submitError && meta.submitError.length && meta.submitError.join(',')) || (meta.error && meta.touched && meta.error)}\n            >\n              <Input {...input} placeholder=\"Maintenance Amount\" />\n            </AForm.Item>\n          )}\n        </Field>\n        <Field name=\"electricity_account_number\">\n          {({ input, meta }) => (\n            <AForm.Item\n              label=\"Electricity Account Number\"\n              validateStatus={(!meta.dirtySinceLastSubmit && meta.submitError && meta.submitError.length) || (meta.error && meta.touched) ? 'error' : ''}\n              help={(meta.submitError && meta.submitError.length && meta.submitError.join(',')) || (meta.error && meta.touched && meta.error)}\n            >\n              <Input {...input} placeholder=\"Electricity Account Number\" />\n            </AForm.Item>\n          )}\n        </Field>\n        <Button type=\"primary\" htmlType=\"submit\" disabled={pristine}>Save</Button>\n        <Button type=\"danger\" onClick={onDelete} disabled={!values || !values.id}>Delete</Button>\n      </form>\n    )}\n  />\n);\n\nRoomEditorForm.propTypes = {\n  initialValues: PropTypes.object.isRequired,\n  values: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\nexport default RoomEditorForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\nimport { RoomConsumer } from '../context';\nimport BuildingEditorForm from './editorBuilding';\nimport RoomEditorForm from './editorRoom';\n\nfunction Editors({\n  buildings, rooms, deleteBuilding, updateBuilding, addUpdateRoom, deleteRoom,\n}) {\n  const selectedBuilding = buildings.find(x => x.selected);\n  const selectedRoom = rooms.find(x => x.selected);\n  return (\n    <React.Fragment>\n      {selectedBuilding\n      && (\n        <BuildingEditorForm\n          onDelete={deleteBuilding}\n          onSubmit={updateBuilding}\n          initialValues={selectedBuilding}\n        />\n      )}\n      {selectedRoom\n      && (\n        <RoomEditorForm\n          onDelete={deleteRoom}\n          onSubmit={addUpdateRoom}\n          initialValues={selectedRoom}\n        />\n      )}\n      {!selectedBuilding && <span className=\"empty\">No Building Selected</span>}\n    </React.Fragment>\n  );\n}\n\nexport default () => (\n  <RoomConsumer>\n    {data => (\n      <React.Fragment>\n        <div className=\"editor\">\n          <Editors {...data} />\n        </div>\n      </React.Fragment>\n    )}\n  </RoomConsumer>\n\n);\n\n\nEditors.propTypes = {\n  addUpdateRoom: PropTypes.func.isRequired,\n  buildings: PropTypes.array.isRequired,\n  deleteBuilding: PropTypes.func.isRequired,\n  deleteRoom: PropTypes.func.isRequired,\n  rooms: PropTypes.array.isRequired,\n  updateBuilding: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport Buildings from './components/buildings';\nimport Rooms from './components/rooms';\nimport Editor from './components/editor';\n\nimport { RoomProvider } from './context';\n\nconst App = () => (\n  <div className=\"App\">\n    <RoomProvider>\n      <h2 className=\"head\">\n        Rooms\n      </h2>\n      <div className=\"container\">\n        <Buildings />\n        <Rooms />\n        <Editor />\n      </div>\n    </RoomProvider>\n  </div>\n);\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}